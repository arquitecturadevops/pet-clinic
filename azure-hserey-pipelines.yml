pool:
  vmImage: ubuntu-latest
  
jobs:
- job: build
  displayName: 'Build'
  steps:
  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: |
        **/build/libs/*.jar
      targetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: appJar
      publishLocation: 'Container'

- job: horusec
  workspace:
    clean: all
  displayName: Horusec
  steps:
    - script: |
        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest
        horusec start -p ./src   

- job: sonar
  workspace:
    clean: all
  displayName:  Code Review
  steps:
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'Sonarcloud'
      organization: 'arquitecturadevops'
      projectKey: 'arqu1t3cturad3v0ps'
      projectName: 'spring-clinic'
    displayName: 'Preparing Sonarqube Environment'
    
  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: "sonarqube"
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: true
      sqGradlePluginVersionChoice: 'specify'
      sonarQubeGradlePluginVersion: '3.3'
    displayName: 'Analyze current Branch'
    
  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'
    displayName: 'Publish Analysis Results'
    

- job: sca
  steps:
  - task: dependency-check-build-task@6
    inputs:
      projectName: 'Spring-clinic'
      scanPath: '$(Pipeline.Workspace)'
      format: 'HTML'
  
- job: buildimage
  displayName:  Build Image
  dependsOn: build
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'appJar'
      downloadPath: '$(Pipeline.Workspace)'

  - script: "mkdir -p build/libs; mv $(Pipeline.Workspace)/appJar/build/libs/ build/; chmod -R 555 build/libs"  
    displayName:  Se mueve jar a carpeta raiz

  - task: Docker@2
    inputs:
      containerRegistry: 'Docker'
      command: 'login'
    displayName: Docker registry login
    
  - task: Docker@2
    inputs:
      containerRegistry: 'Docker'
      repository: 'clagosu/pet-clinic'
      command: 'build'
      Dockerfile: '**/Dockerfile'
      tags: latest
    displayName: Build Image

  - script: | 
     sudo apt-get install -y rpm
     wget https://github.com/aquasecurity/trivy/releases/download/v0.27.1/trivy_0.27.1_Linux-64bit.deb
     sudo dpkg -i trivy_0.27.1_Linux-64bit.deb
     trivy image clagosu/pet-clinic:latest
    displayName: Image Scan
